load("//prow:prow.bzl", "MULTI_KIND", "component", "release")

# Usage:
#   bazel run //prow/cluster:production.apply
release(
    "production",
    component("branchprotector", "cronjob"),
    component("build", "deployment"),
    component("build_rbac", MULTI_KIND),
    component("cherrypicker", "deployment", "service"),
    component("crier", "deployment"),
    component("crier_rbac", MULTI_KIND),
    component("deck", "service", "deployment"),
    component("deck_rbac", MULTI_KIND),
    component("gce-ssd-retain", "storageclass"),
    component("ghproxy", MULTI_KIND),
    component("hook", "service", "deployment"),
    component("hook_rbac", MULTI_KIND),
    component("horologium", "deployment"),
    component("horologium_rbac", MULTI_KIND),
    component("labelsync", "cronjob"),
    component("needs-rebase", "deployment", "service"),
    component("pipeline", "deployment"),
    component("pipeline_rbac", MULTI_KIND),
    component("prow_controller_manager", "deployment", "service"),
    component("prow_controller_manager_rbac", MULTI_KIND),
    component("pushgateway", "deployment"),
    component("sinker", "deployment", "service"),
    component("sinker_rbac", MULTI_KIND),
    component("statusreconciler", "deployment"),
    component("statusreconciler_rbac", MULTI_KIND),
    component("tide", "service", "deployment"),
    component("tide_rbac", MULTI_KIND),
    component("tls-ing", "ingress"),
    component("tot", "service", "deployment"),

    # component(
    #     "mem-limit-range",
    #     "limitrange",
    #     cluster = BUILD_CONTEXT,
    # ),
    # component(
    #     "grandmatriarch",
    #     MULTI_KIND,
    #     cluster = BUILD_CONTEXT,
    # ),
)

filegroup(
    name = "package-srcs",
    srcs = glob(["**"]),
    tags = ["automanaged"],
    visibility = ["//visibility:private"],
)

filegroup(
    name = "all-srcs",
    srcs = [":package-srcs"],
    tags = ["automanaged"],
    visibility = ["//visibility:public"],
)
