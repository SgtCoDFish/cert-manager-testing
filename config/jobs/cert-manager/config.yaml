presets:
- labels:
    preset-cloudflare-credentials: "true"
  env:
  - name: CLOUDFLARE_E2E_API_TOKEN
    valueFrom:
      secretKeyRef:
        name: cloudflare-api-key
        key: api-token
  - name: CLOUDFLARE_E2E_EMAIL
    valueFrom:
      secretKeyRef:
        name: cloudflare-api-key
        key: email
  - name: CLOUDFLARE_E2E_DOMAIN
    valueFrom:
      secretKeyRef:
        name: cloudflare-api-key
        key: domain

- labels:
    preset-venafi-tpp-credentials: "true"
  env:
  - name: VENAFI_TPP_URL
    valueFrom:
      secretKeyRef:
        name: venafi-tpp
        key: url
  - name: VENAFI_TPP_ZONE
    valueFrom:
      secretKeyRef:
        name: venafi-tpp
        key: zone
  - name: VENAFI_TPP_USERNAME
    valueFrom:
      secretKeyRef:
        name: venafi-tpp
        key: username
  - name: VENAFI_TPP_PASSWORD
    valueFrom:
      secretKeyRef:
        name: venafi-tpp
        key: password

- labels:
    preset-venafi-cloud-credentials: "true"
  env:
  - name: VENAFI_CLOUD_ZONE
    valueFrom:
      secretKeyRef:
        name: venafi-cloud
        key: zone
  - name: VENAFI_CLOUD_APITOKEN
    valueFrom:
      secretKeyRef:
        name: venafi-cloud
        key: apitoken

- labels:
    preset-retry-flakey-tests: "true"
  env:
  - name: FLAKE_ATTEMPTS
    value: "2"

- labels:
    preset-aws-credentials: "true"
  env:
  - name: AWS_ACCESS_KEY_ID
    valueFrom:
      secretKeyRef:
        name: aws
        key: accesskey
  - name: AWS_SECRET_ACCESS_KEY
    valueFrom:
      secretKeyRef:
        name: aws
        key: secretkey
  - name: AWS_DEFAULT_REGION
    valueFrom:
      secretKeyRef:
        name: aws
        key: region

- labels:
    preset-disable-all-alpha-feature-gates: "true"
  env:
  - name: FEATURE_GATES
    value: "AllAlpha=false"

- labels:
    preset-disable-alpha-enable-output-formats-feature-gates: "true"
  env:
  - name: FEATURE_GATES
    value: "AllAlpha=false,AdditionalCertificateOutputFormats=true"

- labels:
    preset-enable-all-feature-gates: "true"
  env:
  - name: FEATURE_GATES
    value: "AllAlpha=true"

- labels:
    preset-enable-all-feature-gates-disable-ssa: "true"
  env:
  - name: FEATURE_GATES
    value: "AllAlpha=true,ServerSideApply=false"

- labels:
    preset-disable-all-alpha-beta-feature-gates: "true"
  env:
  - name: FEATURE_GATES
    value: "AllAlpha=false,AllBeta=false"

# Specific cert-manager e2e test suites can be skipped for all e2e tests here by
# setting GINKGO_SKIP value i.e 'Venafi Cloud|Gateway' will skip all Venafi
# Cloud and Gateway tests. Currently we skip all Venafi (VaaS and TPP) tests
# because they rely on external services being up and we don't want PRs and
# regular periodics to fail due to external service failures.
- labels:
    preset-ginkgo-skip-default: "true"
  env:
  - name: GINKGO_SKIP
    value: "Venafi"

- labels:
    preset-ginkgo-focus-http01-ingress: "true"
  env:
  - name: GINKGO_SKIP
    value: "Gateway"
  - name: GINKGO_FOCUS
    value: "Public ACME Server HTTP01 Issuer"

- labels:
    preset-ginkgo-focus-venafi: "true"
  env:
  - name: GINKGO_FOCUS
    value: 'Venafi'

- labels:
    preset-ginkgo-focus-venafi-tpp: "true"
  env:
  - name: GINKGO_FOCUS
    value: 'Venafi TPP'

- labels:
    preset-ginkgo-focus-venafi-cloud: "true"
  env:
  - name: GINKGO_FOCUS
    value: 'Venafi Cloud'

# This preset should be added to all tests that are run with make. It ensures
# that gocache, go module cache and make cache are mounted to the Job's pod
- labels:
    preset-make-volumes: "true"
  volumeMounts:
  - mountPath: /root/.cache/go-build
    name: gocache
  - mountPath: /home/prow/go/pkg/mod
    name: gopkgmod
  - mountPath: /home/prow/go/src/github.com/cert-manager/cert-manager/_bin/downloaded
    name: bindownloaded
  volumes:
  - name: gocache
    hostPath:
      path: /tmp/gocache
      type: DirectoryOrCreate
  - name: gopkgmod
    hostPath:
      path: /tmp/gopkgmod
      type: DirectoryOrCreate
  - name: bindownloaded
    hostPath:
      path: /tmp/bindownloaded
      type: DirectoryOrCreate


# Similar to preset-make-volumes but mounts the directory as "bin" rather than "_bin", to
# match how the directories were used for release-1.8
- labels:
    preset-make-volumes-oldbindir: "true"
  volumeMounts:
  - mountPath: /root/.cache/go-build
    name: gocache
  - mountPath: /home/prow/go/pkg/mod
    name: gopkgmod
  - mountPath: /home/prow/go/src/github.com/cert-manager/cert-manager/bin/downloaded
    name: bindownloaded
  volumes:
  - name: gocache
    hostPath:
      path: /tmp/gocache
      type: DirectoryOrCreate
  - name: gopkgmod
    hostPath:
      path: /tmp/gopkgmod
      type: DirectoryOrCreate
  - name: bindownloaded
    hostPath:
      path: /tmp/bindownloaded
      type: DirectoryOrCreate

# This preset should be added to all e2e tests to ensure Docker (used to spin up
# Kind clusters) can be set up.
- labels:
    preset-default-e2e-volumes: "true"
  volumes:
    - name: modules
      hostPath:
        path: /lib/modules
        type: Directory
    - name: cgroup
      hostPath:
        path: /sys/fs/cgroup
        type: Directory
  volumeMounts:
    - mountPath: /lib/modules
      name: modules
      readOnly: true
    - mountPath: /sys/fs/cgroup
      name: cgroup
